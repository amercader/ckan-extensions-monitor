name: ckanext-sitesearch
on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * 2,4'
jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: openknowledge/ckan-dev:master
    services:
      solr:
        image: ckan/ckan-solr:master
      postgres:
        image: ckan/ckan-postgres-dev:master
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
          image: redis:3

    env:
      CKAN_SQLALCHEMY_URL: postgresql://ckan_default:pass@postgres/ckan_test
      CKAN_DATASTORE_WRITE_URL: postgresql://datastore_write:pass@postgres/datastore_test
      CKAN_DATASTORE_READ_URL: postgresql://datastore_read:pass@postgres/datastore_test
      CKAN_SOLR_URL: http://solr:8983/solr/ckan
      CKAN_REDIS_URL: redis://redis:6379/1

    steps:
    - uses: actions/checkout@v2
    - name: Clone extension
      run: |
        git clone https://github.com/okfn/ckanext-sitesearch.git
    - name: Install extension and requirements
      run: |
        cd ckanext-sitesearch
        pip install -r dev-requirements.txt
        pip install -e .
    - name: Setup extension
      run: |
        cd ckanext-sitesearch
        # Replace default path to CKAN core config file with the one on the container
        sed -i -e 's/use = config:.*/use = config:\/srv\/app\/src\/ckan\/test-core.ini/' test.ini

        ckan -c test.ini db init
    - name: Run tests
      run: |
        cd ckanext-sitesearch
        pytest --ckan-ini=test.ini --disable-warnings ckanext/sitesearch
